{"dependencies":[{"name":"/Users/ts-takahiro.saeki/Desktop/Kobo-project/react-new-api-examples/package.json","includedInParent":true,"mtime":1520829794000},{"name":"/Users/ts-takahiro.saeki/Desktop/Kobo-project/react-new-api-examples/.babelrc","includedInParent":true,"mtime":1520829823000},{"name":"/Users/ts-takahiro.saeki/Desktop/Kobo-project/react-new-api-examples/node_modules/core-js/package.json","includedInParent":true,"mtime":1513021589000},{"name":"./_export","loc":{"line":1,"column":22}},{"name":"./_to-absolute-index","loc":{"line":2,"column":30}}],"generated":{"js":"var $export = require('./_export');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar fromCharCode = String.fromCharCode;\nvar $fromCodePoint = String.fromCodePoint;\n\n// length should be 1, old FF problem\n$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n  // 21.1.2.2 String.fromCodePoint(...codePoints)\n  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars\n    var res = [];\n    var aLen = arguments.length;\n    var i = 0;\n    var code;\n    while (aLen > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');\n      res.push(code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n      );\n    } return res.join('');\n  }\n});\n","map":{"mappings":[{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/core-js/modules/es6.string.from-code-point.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"node_modules/core-js/modules/es6.string.from-code-point.js":"var $export = require('./_export');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar fromCharCode = String.fromCharCode;\nvar $fromCodePoint = String.fromCodePoint;\n\n// length should be 1, old FF problem\n$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n  // 21.1.2.2 String.fromCodePoint(...codePoints)\n  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars\n    var res = [];\n    var aLen = arguments.length;\n    var i = 0;\n    var code;\n    while (aLen > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');\n      res.push(code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n      );\n    } return res.join('');\n  }\n});\n"},"lineCount":24}},"hash":"49685534df7e380d5bf96bb1c8187453","cacheData":{"env":{}}}